ARM GAS  /tmp/cceByOc7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"shell.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DebugSend,"ax",%progbits
  20              		.align	1
  21              		.global	DebugSend
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	DebugSend:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/shell.c"
   1:Core/Src/shell.c **** #include "shell.h"
   2:Core/Src/shell.c **** #include "main.h"
   3:Core/Src/shell.c **** #include "string.h"
   4:Core/Src/shell.c **** #include "stdio.h"
   5:Core/Src/shell.c **** #include "stdlib.h"
   6:Core/Src/shell.c **** char commandbuffer[100];//用于存储串口中输入的内容
   7:Core/Src/shell.c **** char msgbuffer[500];
   8:Core/Src/shell.c **** char *Chariter;//字符迭代器
   9:Core/Src/shell.c **** char charbuffer;
  10:Core/Src/shell.c **** int g_nIndex;
  11:Core/Src/shell.c **** int esc_flag;
  12:Core/Src/shell.c **** int isEnable;
  13:Core/Src/shell.c **** Command *CMDiter;
  14:Core/Src/shell.c **** 
  15:Core/Src/shell.c **** extern UART_HandleTypeDef huart1;
  16:Core/Src/shell.c **** 
  17:Core/Src/shell.c **** extern Command CMDList;
  18:Core/Src/shell.c **** 
  19:Core/Src/shell.c **** 
  20:Core/Src/shell.c **** void shellexe(void)
  21:Core/Src/shell.c **** {
  22:Core/Src/shell.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
  23:Core/Src/shell.c ****     switch(charbuffer)
  24:Core/Src/shell.c ****     {
  25:Core/Src/shell.c ****         case 0x0D :{  //回车检测
  26:Core/Src/shell.c ****             if(g_nIndex == 0)
  27:Core/Src/shell.c ****             {
  28:Core/Src/shell.c ****                 DebugSend("\r\nHyc ->");
  29:Core/Src/shell.c ****                 break;
ARM GAS  /tmp/cceByOc7.s 			page 2


  30:Core/Src/shell.c ****             }
  31:Core/Src/shell.c ****             g_nIndex=0;
  32:Core/Src/shell.c ****             commandExe(commandbuffer);
  33:Core/Src/shell.c ****             memset(commandbuffer,0x00,strlen(commandbuffer));
  34:Core/Src/shell.c ****             DebugSend("\r\nHyc ->");
  35:Core/Src/shell.c ****             break;
  36:Core/Src/shell.c ****         }
  37:Core/Src/shell.c ****         case 0x08 :{  //退格检测
  38:Core/Src/shell.c ****             if(g_nIndex == 0)
  39:Core/Src/shell.c ****             {
  40:Core/Src/shell.c ****                 DebugSend("\x07");
  41:Core/Src/shell.c ****                 break;
  42:Core/Src/shell.c ****             }
  43:Core/Src/shell.c ****             else
  44:Core/Src/shell.c ****             {
  45:Core/Src/shell.c ****                 commandbuffer[--g_nIndex] = 0x00;
  46:Core/Src/shell.c ****                 DebugSend("\x7F");
  47:Core/Src/shell.c ****                 break;
  48:Core/Src/shell.c ****             }       
  49:Core/Src/shell.c ****         }
  50:Core/Src/shell.c ****         case 0x1B :{ //ESC键检测，实现ANSI额外字符指令
  51:Core/Src/shell.c ****             esc_flag = 1;
  52:Core/Src/shell.c ****         }
  53:Core/Src/shell.c ****         default :{
  54:Core/Src/shell.c ****             if(charbuffer >= 0x20 && charbuffer <= 0x7E)  //一般字符检测
  55:Core/Src/shell.c ****             {
  56:Core/Src/shell.c ****                 if(g_nIndex < 100)
  57:Core/Src/shell.c ****                 {
  58:Core/Src/shell.c ****                     commandbuffer[g_nIndex++] = charbuffer;
  59:Core/Src/shell.c ****                     Back_Display(UART, charbuffer);
  60:Core/Src/shell.c ****                     break;
  61:Core/Src/shell.c ****                 }
  62:Core/Src/shell.c ****                 else if(g_nIndex == 0)
  63:Core/Src/shell.c ****                 {
  64:Core/Src/shell.c ****                     DebugSend("\r\nHyc ->");
  65:Core/Src/shell.c ****                     break;
  66:Core/Src/shell.c ****                 } 
  67:Core/Src/shell.c ****             }
  68:Core/Src/shell.c ****         }
  69:Core/Src/shell.c ****     };
  70:Core/Src/shell.c ****     Recv_int_enable();
  71:Core/Src/shell.c **** }
  72:Core/Src/shell.c **** 
  73:Core/Src/shell.c **** SHELL_STATUS commandExe(char * command)
  74:Core/Src/shell.c **** {
  75:Core/Src/shell.c ****     SHELL_STATUS ret;
  76:Core/Src/shell.c ****     CMDiter = &CMDList;
  77:Core/Src/shell.c ****     while(memcmp(CMDiter->command, command, strlen(CMDiter->command)) != 0)
  78:Core/Src/shell.c ****     {
  79:Core/Src/shell.c ****         CMDiter = CMDiter->next;
  80:Core/Src/shell.c ****         if(CMDiter == NULL)
  81:Core/Src/shell.c ****         {
  82:Core/Src/shell.c ****             ret = DebugSend("\r\nCommand Not Found!");
  83:Core/Src/shell.c ****             if(ret == SHELL_ERROR)
  84:Core/Src/shell.c ****                 Error_Handler();
  85:Core/Src/shell.c ****             return SHELL_ERROR;
  86:Core/Src/shell.c ****         }
ARM GAS  /tmp/cceByOc7.s 			page 3


  87:Core/Src/shell.c ****     }
  88:Core/Src/shell.c **** 		
  89:Core/Src/shell.c **** 		int argc = 0;
  90:Core/Src/shell.c **** 		Chariter = command;
  91:Core/Src/shell.c **** 		while(strstr(Chariter, " -") != NULL)
  92:Core/Src/shell.c **** 		{
  93:Core/Src/shell.c **** 			argc++;
  94:Core/Src/shell.c **** 			Chariter = strstr(Chariter, " -") + 1;
  95:Core/Src/shell.c **** 		}
  96:Core/Src/shell.c **** 		Chariter = command;
  97:Core/Src/shell.c **** 		char *param[argc];
  98:Core/Src/shell.c **** 		char *cmd_begin;
  99:Core/Src/shell.c **** 		char *cmd_end;
 100:Core/Src/shell.c **** 		for(int i=0;i<argc;i++)
 101:Core/Src/shell.c **** 		{	
 102:Core/Src/shell.c **** 			cmd_begin = strstr(Chariter, " -");
 103:Core/Src/shell.c **** 			cmd_end = strstr(strstr(Chariter, " -")+1," -"); 
 104:Core/Src/shell.c **** 			if(cmd_end == NULL)
 105:Core/Src/shell.c **** 			{
 106:Core/Src/shell.c **** 				param[i] = (char *)malloc(strlen(cmd_begin));
 107:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, strlen(cmd_begin));
 108:Core/Src/shell.c **** 			}
 109:Core/Src/shell.c **** 			else
 110:Core/Src/shell.c **** 			{
 111:Core/Src/shell.c **** 				param[i] = (char *)malloc(cmd_end - cmd_begin);
 112:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 113:Core/Src/shell.c **** 				Chariter = strstr(Chariter, " -")+1;
 114:Core/Src/shell.c **** 			}
 115:Core/Src/shell.c **** 		}
 116:Core/Src/shell.c ****     (CMDiter->FunToExe)(argc, param);
 117:Core/Src/shell.c **** 		
 118:Core/Src/shell.c ****     return SHELL_OK;
 119:Core/Src/shell.c **** }
 120:Core/Src/shell.c **** 
 121:Core/Src/shell.c **** SHELL_STATUS DebugSend(char *msg)
 122:Core/Src/shell.c **** {
  30              		.loc 1 122 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 104
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 122 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 9BB0     		sub	sp, sp, #108
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 112
  42 0004 0146     		mov	r1, r0
 123:Core/Src/shell.c ****     HAL_StatusTypeDef ret;
  43              		.loc 1 123 5 is_stmt 1 view .LVU2
 124:Core/Src/shell.c ****     char msg2send[100];
  44              		.loc 1 124 5 view .LVU3
 125:Core/Src/shell.c ****     sprintf(msg2send, "%s",msg);
  45              		.loc 1 125 5 view .LVU4
  46 0006 01A8     		add	r0, sp, #4
  47              	.LVL1:
ARM GAS  /tmp/cceByOc7.s 			page 4


  48              		.loc 1 125 5 is_stmt 0 view .LVU5
  49 0008 FFF7FEFF 		bl	strcpy
  50              	.LVL2:
 126:Core/Src/shell.c ****     ret = HAL_UART_Transmit(&UART, (uint8_t *)msg2send, strlen(msg2send), 0xff);
  51              		.loc 1 126 5 is_stmt 1 view .LVU6
  52              		.loc 1 126 57 is_stmt 0 view .LVU7
  53 000c 01A8     		add	r0, sp, #4
  54 000e FFF7FEFF 		bl	strlen
  55              	.LVL3:
  56              		.loc 1 126 11 view .LVU8
  57 0012 FF23     		movs	r3, #255
  58 0014 82B2     		uxth	r2, r0
  59 0016 01A9     		add	r1, sp, #4
  60 0018 0348     		ldr	r0, .L4
  61 001a FFF7FEFF 		bl	HAL_UART_Transmit
  62              	.LVL4:
 127:Core/Src/shell.c ****     if(ret != HAL_OK)
  63              		.loc 1 127 5 is_stmt 1 view .LVU9
  64              		.loc 1 127 7 is_stmt 0 view .LVU10
  65 001e 00B1     		cbz	r0, .L2
 128:Core/Src/shell.c ****         return SHELL_ERROR;
  66              		.loc 1 128 16 view .LVU11
  67 0020 0120     		movs	r0, #1
  68              	.L2:
 129:Core/Src/shell.c ****     else 
 130:Core/Src/shell.c ****         return SHELL_OK;
 131:Core/Src/shell.c **** }
  69              		.loc 1 131 1 view .LVU12
  70 0022 1BB0     		add	sp, sp, #108
  71              	.LCFI2:
  72              		.cfi_def_cfa_offset 4
  73              		@ sp needed
  74 0024 5DF804FB 		ldr	pc, [sp], #4
  75              	.L5:
  76              		.align	2
  77              	.L4:
  78 0028 00000000 		.word	huart1
  79              		.cfi_endproc
  80              	.LFE135:
  82              		.section	.rodata.commandExe.str1.4,"aMS",%progbits,1
  83              		.align	2
  84              	.LC0:
  85 0000 0D0A436F 		.ascii	"\015\012Command Not Found!\000"
  85      6D6D616E 
  85      64204E6F 
  85      7420466F 
  85      756E6421 
  86 0015 000000   		.align	2
  87              	.LC1:
  88 0018 202D00   		.ascii	" -\000"
  89              		.section	.text.commandExe,"ax",%progbits
  90              		.align	1
  91              		.global	commandExe
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	commandExe:
ARM GAS  /tmp/cceByOc7.s 			page 5


  97              	.LVL5:
  98              	.LFB134:
  74:Core/Src/shell.c ****     SHELL_STATUS ret;
  99              		.loc 1 74 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 1, uses_anonymous_args = 0
  74:Core/Src/shell.c ****     SHELL_STATUS ret;
 103              		.loc 1 74 1 is_stmt 0 view .LVU14
 104 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 36
 107              		.cfi_offset 4, -36
 108              		.cfi_offset 5, -32
 109              		.cfi_offset 6, -28
 110              		.cfi_offset 7, -24
 111              		.cfi_offset 8, -20
 112              		.cfi_offset 9, -16
 113              		.cfi_offset 10, -12
 114              		.cfi_offset 11, -8
 115              		.cfi_offset 14, -4
 116 0004 83B0     		sub	sp, sp, #12
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 48
 119 0006 00AF     		add	r7, sp, #0
 120              	.LCFI5:
 121              		.cfi_def_cfa_register 7
 122 0008 8046     		mov	r8, r0
  75:Core/Src/shell.c ****     CMDiter = &CMDList;
 123              		.loc 1 75 5 is_stmt 1 view .LVU15
  76:Core/Src/shell.c ****     while(memcmp(CMDiter->command, command, strlen(CMDiter->command)) != 0)
 124              		.loc 1 76 5 view .LVU16
  76:Core/Src/shell.c ****     while(memcmp(CMDiter->command, command, strlen(CMDiter->command)) != 0)
 125              		.loc 1 76 13 is_stmt 0 view .LVU17
 126 000a 474B     		ldr	r3, .L23
 127 000c 474A     		ldr	r2, .L23+4
 128 000e 1A60     		str	r2, [r3]
  77:Core/Src/shell.c ****     {
 129              		.loc 1 77 5 is_stmt 1 view .LVU18
 130              	.LVL6:
 131              	.L7:
  77:Core/Src/shell.c ****     {
 132              		.loc 1 77 10 view .LVU19
  77:Core/Src/shell.c ****     {
 133              		.loc 1 77 25 is_stmt 0 view .LVU20
 134 0010 454B     		ldr	r3, .L23
 135 0012 1D68     		ldr	r5, [r3]
 136 0014 2C68     		ldr	r4, [r5]
  77:Core/Src/shell.c ****     {
 137              		.loc 1 77 11 view .LVU21
 138 0016 2046     		mov	r0, r4
 139 0018 FFF7FEFF 		bl	strlen
 140              	.LVL7:
 141 001c 0246     		mov	r2, r0
 142 001e 4146     		mov	r1, r8
 143 0020 2046     		mov	r0, r4
 144 0022 FFF7FEFF 		bl	memcmp
ARM GAS  /tmp/cceByOc7.s 			page 6


 145              	.LVL8:
  77:Core/Src/shell.c ****     {
 146              		.loc 1 77 10 view .LVU22
 147 0026 0446     		mov	r4, r0
 148 0028 70B1     		cbz	r0, .L18
  79:Core/Src/shell.c ****         if(CMDiter == NULL)
 149              		.loc 1 79 9 is_stmt 1 view .LVU23
  79:Core/Src/shell.c ****         if(CMDiter == NULL)
 150              		.loc 1 79 26 is_stmt 0 view .LVU24
 151 002a EB68     		ldr	r3, [r5, #12]
  79:Core/Src/shell.c ****         if(CMDiter == NULL)
 152              		.loc 1 79 17 view .LVU25
 153 002c 3E4A     		ldr	r2, .L23
 154 002e 1360     		str	r3, [r2]
  80:Core/Src/shell.c ****         {
 155              		.loc 1 80 9 is_stmt 1 view .LVU26
  80:Core/Src/shell.c ****         {
 156              		.loc 1 80 11 is_stmt 0 view .LVU27
 157 0030 002B     		cmp	r3, #0
 158 0032 EDD1     		bne	.L7
  82:Core/Src/shell.c ****             if(ret == SHELL_ERROR)
 159              		.loc 1 82 13 is_stmt 1 view .LVU28
  82:Core/Src/shell.c ****             if(ret == SHELL_ERROR)
 160              		.loc 1 82 19 is_stmt 0 view .LVU29
 161 0034 3E48     		ldr	r0, .L23+8
 162 0036 FFF7FEFF 		bl	DebugSend
 163              	.LVL9:
  83:Core/Src/shell.c ****                 Error_Handler();
 164              		.loc 1 83 13 is_stmt 1 view .LVU30
  83:Core/Src/shell.c ****                 Error_Handler();
 165              		.loc 1 83 15 is_stmt 0 view .LVU31
 166 003a 0128     		cmp	r0, #1
 167 003c 01D0     		beq	.L19
 168              	.LVL10:
 169              	.L8:
  85:Core/Src/shell.c ****         }
 170              		.loc 1 85 13 is_stmt 1 view .LVU32
  85:Core/Src/shell.c ****         }
 171              		.loc 1 85 20 is_stmt 0 view .LVU33
 172 003e 0120     		movs	r0, #1
 173 0040 6EE0     		b	.L9
 174              	.LVL11:
 175              	.L19:
  84:Core/Src/shell.c ****             return SHELL_ERROR;
 176              		.loc 1 84 17 is_stmt 1 view .LVU34
 177 0042 FFF7FEFF 		bl	Error_Handler
 178              	.LVL12:
  84:Core/Src/shell.c ****             return SHELL_ERROR;
 179              		.loc 1 84 17 is_stmt 0 view .LVU35
 180 0046 FAE7     		b	.L8
 181              	.L18:
  89:Core/Src/shell.c **** 		Chariter = command;
 182              		.loc 1 89 3 is_stmt 1 view .LVU36
 183              	.LVL13:
  90:Core/Src/shell.c **** 		while(strstr(Chariter, " -") != NULL)
 184              		.loc 1 90 3 view .LVU37
  90:Core/Src/shell.c **** 		while(strstr(Chariter, " -") != NULL)
ARM GAS  /tmp/cceByOc7.s 			page 7


 185              		.loc 1 90 12 is_stmt 0 view .LVU38
 186 0048 3A4B     		ldr	r3, .L23+12
 187 004a C3F80080 		str	r8, [r3]
  91:Core/Src/shell.c **** 		{
 188              		.loc 1 91 3 is_stmt 1 view .LVU39
  89:Core/Src/shell.c **** 		Chariter = command;
 189              		.loc 1 89 7 is_stmt 0 view .LVU40
 190 004e 0646     		mov	r6, r0
 191              	.LVL14:
 192              	.L11:
  91:Core/Src/shell.c **** 		{
 193              		.loc 1 91 8 is_stmt 1 view .LVU41
  91:Core/Src/shell.c **** 		{
 194              		.loc 1 91 9 is_stmt 0 view .LVU42
 195 0050 3949     		ldr	r1, .L23+16
 196 0052 384B     		ldr	r3, .L23+12
 197 0054 1868     		ldr	r0, [r3]
 198 0056 FFF7FEFF 		bl	strstr
 199              	.LVL15:
  91:Core/Src/shell.c **** 		{
 200              		.loc 1 91 8 view .LVU43
 201 005a 0346     		mov	r3, r0
 202 005c 20B1     		cbz	r0, .L20
  93:Core/Src/shell.c **** 			Chariter = strstr(Chariter, " -") + 1;
 203              		.loc 1 93 4 is_stmt 1 view .LVU44
  93:Core/Src/shell.c **** 			Chariter = strstr(Chariter, " -") + 1;
 204              		.loc 1 93 8 is_stmt 0 view .LVU45
 205 005e 0136     		adds	r6, r6, #1
 206              	.LVL16:
  94:Core/Src/shell.c **** 		}
 207              		.loc 1 94 4 is_stmt 1 view .LVU46
  94:Core/Src/shell.c **** 		}
 208              		.loc 1 94 38 is_stmt 0 view .LVU47
 209 0060 0133     		adds	r3, r3, #1
  94:Core/Src/shell.c **** 		}
 210              		.loc 1 94 13 view .LVU48
 211 0062 344A     		ldr	r2, .L23+12
 212 0064 1360     		str	r3, [r2]
 213 0066 F3E7     		b	.L11
 214              	.L20:
  96:Core/Src/shell.c **** 		char *param[argc];
 215              		.loc 1 96 3 is_stmt 1 view .LVU49
  96:Core/Src/shell.c **** 		char *param[argc];
 216              		.loc 1 96 12 is_stmt 0 view .LVU50
 217 0068 324B     		ldr	r3, .L23+12
 218 006a C3F80080 		str	r8, [r3]
  97:Core/Src/shell.c **** 		char *cmd_begin;
 219              		.loc 1 97 3 is_stmt 1 view .LVU51
 220 006e C7F804D0 		str	sp, [r7, #4]
 221              	.LVL17:
  97:Core/Src/shell.c **** 		char *cmd_begin;
 222              		.loc 1 97 9 is_stmt 0 view .LVU52
 223 0072 B300     		lsls	r3, r6, #2
 224 0074 0733     		adds	r3, r3, #7
 225 0076 23F00703 		bic	r3, r3, #7
 226 007a ADEB030D 		sub	sp, sp, r3
 227 007e EB46     		mov	fp, sp
ARM GAS  /tmp/cceByOc7.s 			page 8


 228              	.LVL18:
  98:Core/Src/shell.c **** 		char *cmd_end;
 229              		.loc 1 98 3 is_stmt 1 view .LVU53
  99:Core/Src/shell.c **** 		for(int i=0;i<argc;i++)
 230              		.loc 1 99 3 view .LVU54
 100:Core/Src/shell.c **** 		{	
 231              		.loc 1 100 3 view .LVU55
 232              	.LBB2:
 100:Core/Src/shell.c **** 		{	
 233              		.loc 1 100 7 view .LVU56
 100:Core/Src/shell.c **** 		{	
 234              		.loc 1 100 3 is_stmt 0 view .LVU57
 235 0080 17E0     		b	.L13
 236              	.LVL19:
 237              	.L22:
 106:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, strlen(cmd_begin));
 238              		.loc 1 106 5 is_stmt 1 view .LVU58
 106:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, strlen(cmd_begin));
 239              		.loc 1 106 24 is_stmt 0 view .LVU59
 240 0082 2846     		mov	r0, r5
 241              	.LVL20:
 106:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, strlen(cmd_begin));
 242              		.loc 1 106 24 view .LVU60
 243 0084 FFF7FEFF 		bl	strlen
 244              	.LVL21:
 245 0088 FFF7FEFF 		bl	malloc
 246              	.LVL22:
 247 008c 8046     		mov	r8, r0
 106:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, strlen(cmd_begin));
 248              		.loc 1 106 14 view .LVU61
 249 008e 4BF82400 		str	r0, [fp, r4, lsl #2]
 107:Core/Src/shell.c **** 			}
 250              		.loc 1 107 5 is_stmt 1 view .LVU62
 107:Core/Src/shell.c **** 			}
 251              		.loc 1 107 23 is_stmt 0 view .LVU63
 252 0092 2949     		ldr	r1, .L23+16
 253 0094 274B     		ldr	r3, .L23+12
 254 0096 1868     		ldr	r0, [r3]
 255 0098 FFF7FEFF 		bl	strstr
 256              	.LVL23:
 107:Core/Src/shell.c **** 			}
 257              		.loc 1 107 45 view .LVU64
 258 009c 00F10109 		add	r9, r0, #1
 107:Core/Src/shell.c **** 			}
 259              		.loc 1 107 5 view .LVU65
 260 00a0 2846     		mov	r0, r5
 261 00a2 FFF7FEFF 		bl	strlen
 262              	.LVL24:
 263 00a6 0246     		mov	r2, r0
 264 00a8 4946     		mov	r1, r9
 265 00aa 4046     		mov	r0, r8
 266 00ac FFF7FEFF 		bl	strncpy
 267              	.LVL25:
 268              	.L15:
 100:Core/Src/shell.c **** 		{	
 269              		.loc 1 100 22 is_stmt 1 discriminator 2 view .LVU66
 100:Core/Src/shell.c **** 		{	
ARM GAS  /tmp/cceByOc7.s 			page 9


 270              		.loc 1 100 23 is_stmt 0 discriminator 2 view .LVU67
 271 00b0 0134     		adds	r4, r4, #1
 272              	.LVL26:
 273              	.L13:
 100:Core/Src/shell.c **** 		{	
 274              		.loc 1 100 15 is_stmt 1 discriminator 1 view .LVU68
 100:Core/Src/shell.c **** 		{	
 275              		.loc 1 100 3 is_stmt 0 discriminator 1 view .LVU69
 276 00b2 B442     		cmp	r4, r6
 277 00b4 2BDA     		bge	.L21
 102:Core/Src/shell.c **** 			cmd_end = strstr(strstr(Chariter, " -")+1," -"); 
 278              		.loc 1 102 4 is_stmt 1 view .LVU70
 102:Core/Src/shell.c **** 			cmd_end = strstr(strstr(Chariter, " -")+1," -"); 
 279              		.loc 1 102 16 is_stmt 0 view .LVU71
 280 00b6 DFF88080 		ldr	r8, .L23+16
 281 00ba 4146     		mov	r1, r8
 282 00bc 1D4B     		ldr	r3, .L23+12
 283 00be 1868     		ldr	r0, [r3]
 284 00c0 FFF7FEFF 		bl	strstr
 285              	.LVL27:
 286 00c4 0546     		mov	r5, r0
 287              	.LVL28:
 103:Core/Src/shell.c **** 			if(cmd_end == NULL)
 288              		.loc 1 103 4 is_stmt 1 view .LVU72
 103:Core/Src/shell.c **** 			if(cmd_end == NULL)
 289              		.loc 1 103 14 is_stmt 0 view .LVU73
 290 00c6 4146     		mov	r1, r8
 291 00c8 0130     		adds	r0, r0, #1
 292              	.LVL29:
 103:Core/Src/shell.c **** 			if(cmd_end == NULL)
 293              		.loc 1 103 14 view .LVU74
 294 00ca FFF7FEFF 		bl	strstr
 295              	.LVL30:
 104:Core/Src/shell.c **** 			{
 296              		.loc 1 104 4 is_stmt 1 view .LVU75
 104:Core/Src/shell.c **** 			{
 297              		.loc 1 104 6 is_stmt 0 view .LVU76
 298 00ce 0028     		cmp	r0, #0
 299 00d0 D7D0     		beq	.L22
 111:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 300              		.loc 1 111 5 is_stmt 1 view .LVU77
 111:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 301              		.loc 1 111 39 is_stmt 0 view .LVU78
 302 00d2 451B     		subs	r5, r0, r5
 303              	.LVL31:
 111:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 304              		.loc 1 111 24 view .LVU79
 305 00d4 2846     		mov	r0, r5
 306              	.LVL32:
 111:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 307              		.loc 1 111 24 view .LVU80
 308 00d6 FFF7FEFF 		bl	malloc
 309              	.LVL33:
 310 00da 8046     		mov	r8, r0
 111:Core/Src/shell.c **** 				strncpy(param[i], strstr(Chariter, " -")+1, cmd_end - cmd_begin);
 311              		.loc 1 111 14 view .LVU81
 312 00dc 4BF82400 		str	r0, [fp, r4, lsl #2]
ARM GAS  /tmp/cceByOc7.s 			page 10


 112:Core/Src/shell.c **** 				Chariter = strstr(Chariter, " -")+1;
 313              		.loc 1 112 5 is_stmt 1 view .LVU82
 112:Core/Src/shell.c **** 				Chariter = strstr(Chariter, " -")+1;
 314              		.loc 1 112 23 is_stmt 0 view .LVU83
 315 00e0 DFF854A0 		ldr	r10, .L23+16
 316 00e4 DFF84C90 		ldr	r9, .L23+12
 317 00e8 5146     		mov	r1, r10
 318 00ea D9F80000 		ldr	r0, [r9]
 319 00ee FFF7FEFF 		bl	strstr
 320              	.LVL34:
 112:Core/Src/shell.c **** 				Chariter = strstr(Chariter, " -")+1;
 321              		.loc 1 112 5 view .LVU84
 322 00f2 2A46     		mov	r2, r5
 323 00f4 411C     		adds	r1, r0, #1
 324 00f6 4046     		mov	r0, r8
 325 00f8 FFF7FEFF 		bl	strncpy
 326              	.LVL35:
 113:Core/Src/shell.c **** 			}
 327              		.loc 1 113 5 is_stmt 1 view .LVU85
 113:Core/Src/shell.c **** 			}
 328              		.loc 1 113 16 is_stmt 0 view .LVU86
 329 00fc 5146     		mov	r1, r10
 330 00fe D9F80000 		ldr	r0, [r9]
 331 0102 FFF7FEFF 		bl	strstr
 332              	.LVL36:
 113:Core/Src/shell.c **** 			}
 333              		.loc 1 113 38 view .LVU87
 334 0106 0130     		adds	r0, r0, #1
 113:Core/Src/shell.c **** 			}
 335              		.loc 1 113 14 view .LVU88
 336 0108 C9F80000 		str	r0, [r9]
 337 010c D0E7     		b	.L15
 338              	.L21:
 113:Core/Src/shell.c **** 			}
 339              		.loc 1 113 14 view .LVU89
 340              	.LBE2:
 116:Core/Src/shell.c **** 		
 341              		.loc 1 116 5 is_stmt 1 view .LVU90
 116:Core/Src/shell.c **** 		
 342              		.loc 1 116 13 is_stmt 0 view .LVU91
 343 010e 064B     		ldr	r3, .L23
 344 0110 1B68     		ldr	r3, [r3]
 345 0112 9B68     		ldr	r3, [r3, #8]
 346 0114 5946     		mov	r1, fp
 347 0116 3046     		mov	r0, r6
 348 0118 9847     		blx	r3
 349              	.LVL37:
 118:Core/Src/shell.c **** }
 350              		.loc 1 118 5 is_stmt 1 view .LVU92
 351 011a D7F804D0 		ldr	sp, [r7, #4]
 118:Core/Src/shell.c **** }
 352              		.loc 1 118 12 is_stmt 0 view .LVU93
 353 011e 0020     		movs	r0, #0
 354              	.LVL38:
 355              	.L9:
 119:Core/Src/shell.c **** 
 356              		.loc 1 119 1 discriminator 1 view .LVU94
ARM GAS  /tmp/cceByOc7.s 			page 11


 357 0120 0C37     		adds	r7, r7, #12
 358              	.LCFI6:
 359              		.cfi_def_cfa_offset 36
 360 0122 BD46     		mov	sp, r7
 361              	.LCFI7:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0124 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 365              	.L24:
 366              		.align	2
 367              	.L23:
 368 0128 00000000 		.word	.LANCHOR0
 369 012c 00000000 		.word	CMDList
 370 0130 00000000 		.word	.LC0
 371 0134 00000000 		.word	.LANCHOR1
 372 0138 18000000 		.word	.LC1
 373              		.cfi_endproc
 374              	.LFE134:
 376              		.section	.rodata.shellexe.str1.4,"aMS",%progbits,1
 377              		.align	2
 378              	.LC2:
 379 0000 0D0A4879 		.ascii	"\015\012Hyc ->\000"
 379      63202D3E 
 379      00
 380 0009 000000   		.align	2
 381              	.LC3:
 382 000c 0700     		.ascii	"\007\000"
 383 000e 0000     		.align	2
 384              	.LC4:
 385 0010 7F00     		.ascii	"\177\000"
 386              		.section	.text.shellexe,"ax",%progbits
 387              		.align	1
 388              		.global	shellexe
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	shellexe:
 394              	.LFB133:
  21:Core/Src/shell.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 395              		.loc 1 21 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 38B5     		push	{r3, r4, r5, lr}
 400              	.LCFI8:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 3, -16
 403              		.cfi_offset 4, -12
 404              		.cfi_offset 5, -8
 405              		.cfi_offset 14, -4
  22:Core/Src/shell.c ****     switch(charbuffer)
 406              		.loc 1 22 5 view .LVU96
 407 0002 4FF40051 		mov	r1, #8192
 408 0006 2C48     		ldr	r0, .L37
 409 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 410              	.LVL39:
  23:Core/Src/shell.c ****     {
ARM GAS  /tmp/cceByOc7.s 			page 12


 411              		.loc 1 23 5 view .LVU97
 412 000c 2B4B     		ldr	r3, .L37+4
 413 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0010 0D2B     		cmp	r3, #13
 415 0012 11D0     		beq	.L26
 416 0014 1B2B     		cmp	r3, #27
 417 0016 3FD0     		beq	.L27
 418 0018 082B     		cmp	r3, #8
 419 001a 2CD0     		beq	.L35
 420              	.L29:
  54:Core/Src/shell.c ****             {
 421              		.loc 1 54 13 view .LVU98
  54:Core/Src/shell.c ****             {
 422              		.loc 1 54 35 is_stmt 0 view .LVU99
 423 001c A3F12002 		sub	r2, r3, #32
 424 0020 D2B2     		uxtb	r2, r2
  54:Core/Src/shell.c ****             {
 425              		.loc 1 54 15 view .LVU100
 426 0022 5E2A     		cmp	r2, #94
 427 0024 0ED8     		bhi	.L31
  56:Core/Src/shell.c ****                 {
 428              		.loc 1 56 17 is_stmt 1 view .LVU101
  56:Core/Src/shell.c ****                 {
 429              		.loc 1 56 29 is_stmt 0 view .LVU102
 430 0026 264A     		ldr	r2, .L37+8
 431 0028 1268     		ldr	r2, [r2]
  56:Core/Src/shell.c ****                 {
 432              		.loc 1 56 19 view .LVU103
 433 002a 632A     		cmp	r2, #99
 434 002c 38DD     		ble	.L36
  62:Core/Src/shell.c ****                 {
 435              		.loc 1 62 22 is_stmt 1 view .LVU104
  62:Core/Src/shell.c ****                 {
 436              		.loc 1 62 24 is_stmt 0 view .LVU105
 437 002e 4AB9     		cbnz	r2, .L31
  64:Core/Src/shell.c ****                     break;
 438              		.loc 1 64 21 is_stmt 1 view .LVU106
 439 0030 2448     		ldr	r0, .L37+12
 440 0032 FFF7FEFF 		bl	DebugSend
 441              	.LVL40:
  65:Core/Src/shell.c ****                 } 
 442              		.loc 1 65 21 view .LVU107
 443 0036 05E0     		b	.L31
 444              	.L26:
  26:Core/Src/shell.c ****             {
 445              		.loc 1 26 13 view .LVU108
  26:Core/Src/shell.c ****             {
 446              		.loc 1 26 25 is_stmt 0 view .LVU109
 447 0038 214B     		ldr	r3, .L37+8
 448 003a 1B68     		ldr	r3, [r3]
  26:Core/Src/shell.c ****             {
 449              		.loc 1 26 15 view .LVU110
 450 003c 43B9     		cbnz	r3, .L30
  28:Core/Src/shell.c ****                 break;
 451              		.loc 1 28 17 is_stmt 1 view .LVU111
 452 003e 2148     		ldr	r0, .L37+12
 453 0040 FFF7FEFF 		bl	DebugSend
ARM GAS  /tmp/cceByOc7.s 			page 13


 454              	.LVL41:
  29:Core/Src/shell.c ****             }
 455              		.loc 1 29 17 view .LVU112
 456              	.L31:
  69:Core/Src/shell.c ****     Recv_int_enable();
 457              		.loc 1 69 6 view .LVU113
  70:Core/Src/shell.c **** }
 458              		.loc 1 70 5 view .LVU114
 459 0044 0122     		movs	r2, #1
 460 0046 1D49     		ldr	r1, .L37+4
 461 0048 1F48     		ldr	r0, .L37+16
 462 004a FFF7FEFF 		bl	HAL_UART_Receive_IT
 463              	.LVL42:
  71:Core/Src/shell.c **** 
 464              		.loc 1 71 1 is_stmt 0 view .LVU115
 465 004e 38BD     		pop	{r3, r4, r5, pc}
 466              	.L30:
  31:Core/Src/shell.c ****             commandExe(commandbuffer);
 467              		.loc 1 31 13 is_stmt 1 view .LVU116
  31:Core/Src/shell.c ****             commandExe(commandbuffer);
 468              		.loc 1 31 21 is_stmt 0 view .LVU117
 469 0050 0025     		movs	r5, #0
 470 0052 1B4B     		ldr	r3, .L37+8
 471 0054 1D60     		str	r5, [r3]
  32:Core/Src/shell.c ****             memset(commandbuffer,0x00,strlen(commandbuffer));
 472              		.loc 1 32 13 is_stmt 1 view .LVU118
 473 0056 1D4C     		ldr	r4, .L37+20
 474 0058 2046     		mov	r0, r4
 475 005a FFF7FEFF 		bl	commandExe
 476              	.LVL43:
  33:Core/Src/shell.c ****             DebugSend("\r\nHyc ->");
 477              		.loc 1 33 13 view .LVU119
 478 005e 2046     		mov	r0, r4
 479 0060 FFF7FEFF 		bl	strlen
 480              	.LVL44:
 481 0064 0246     		mov	r2, r0
 482 0066 2946     		mov	r1, r5
 483 0068 2046     		mov	r0, r4
 484 006a FFF7FEFF 		bl	memset
 485              	.LVL45:
  34:Core/Src/shell.c ****             break;
 486              		.loc 1 34 13 view .LVU120
 487 006e 1548     		ldr	r0, .L37+12
 488 0070 FFF7FEFF 		bl	DebugSend
 489              	.LVL46:
  35:Core/Src/shell.c ****         }
 490              		.loc 1 35 13 view .LVU121
 491 0074 E6E7     		b	.L31
 492              	.L35:
  38:Core/Src/shell.c ****             {
 493              		.loc 1 38 13 view .LVU122
  38:Core/Src/shell.c ****             {
 494              		.loc 1 38 25 is_stmt 0 view .LVU123
 495 0076 124B     		ldr	r3, .L37+8
 496 0078 1B68     		ldr	r3, [r3]
  38:Core/Src/shell.c ****             {
 497              		.loc 1 38 15 view .LVU124
ARM GAS  /tmp/cceByOc7.s 			page 14


 498 007a 1BB9     		cbnz	r3, .L32
  40:Core/Src/shell.c ****                 break;
 499              		.loc 1 40 17 is_stmt 1 view .LVU125
 500 007c 1448     		ldr	r0, .L37+24
 501 007e FFF7FEFF 		bl	DebugSend
 502              	.LVL47:
  41:Core/Src/shell.c ****             }
 503              		.loc 1 41 17 view .LVU126
 504 0082 DFE7     		b	.L31
 505              	.L32:
  45:Core/Src/shell.c ****                 DebugSend("\x7F");
 506              		.loc 1 45 17 view .LVU127
  45:Core/Src/shell.c ****                 DebugSend("\x7F");
 507              		.loc 1 45 31 is_stmt 0 view .LVU128
 508 0084 013B     		subs	r3, r3, #1
  45:Core/Src/shell.c ****                 DebugSend("\x7F");
 509              		.loc 1 45 43 view .LVU129
 510 0086 0E4A     		ldr	r2, .L37+8
 511 0088 1360     		str	r3, [r2]
 512 008a 104A     		ldr	r2, .L37+20
 513 008c 0021     		movs	r1, #0
 514 008e D154     		strb	r1, [r2, r3]
  46:Core/Src/shell.c ****                 break;
 515              		.loc 1 46 17 is_stmt 1 view .LVU130
 516 0090 1048     		ldr	r0, .L37+28
 517 0092 FFF7FEFF 		bl	DebugSend
 518              	.LVL48:
  47:Core/Src/shell.c ****             }       
 519              		.loc 1 47 17 view .LVU131
 520 0096 D5E7     		b	.L31
 521              	.L27:
  51:Core/Src/shell.c ****         }
 522              		.loc 1 51 13 view .LVU132
  51:Core/Src/shell.c ****         }
 523              		.loc 1 51 22 is_stmt 0 view .LVU133
 524 0098 0F4A     		ldr	r2, .L37+32
 525 009a 0121     		movs	r1, #1
 526 009c 1160     		str	r1, [r2]
 527 009e BDE7     		b	.L29
 528              	.L36:
  58:Core/Src/shell.c ****                     Back_Display(UART, charbuffer);
 529              		.loc 1 58 21 is_stmt 1 view .LVU134
  58:Core/Src/shell.c ****                     Back_Display(UART, charbuffer);
 530              		.loc 1 58 43 is_stmt 0 view .LVU135
 531 00a0 501C     		adds	r0, r2, #1
 532 00a2 0749     		ldr	r1, .L37+8
 533 00a4 0860     		str	r0, [r1]
  58:Core/Src/shell.c ****                     Back_Display(UART, charbuffer);
 534              		.loc 1 58 47 view .LVU136
 535 00a6 0949     		ldr	r1, .L37+20
 536 00a8 8B54     		strb	r3, [r1, r2]
  59:Core/Src/shell.c ****                     break;
 537              		.loc 1 59 21 is_stmt 1 view .LVU137
 538 00aa FF23     		movs	r3, #255
 539 00ac 0122     		movs	r2, #1
 540 00ae 0349     		ldr	r1, .L37+4
 541 00b0 0548     		ldr	r0, .L37+16
ARM GAS  /tmp/cceByOc7.s 			page 15


 542 00b2 FFF7FEFF 		bl	HAL_UART_Transmit
 543              	.LVL49:
  60:Core/Src/shell.c ****                 }
 544              		.loc 1 60 21 view .LVU138
 545 00b6 C5E7     		b	.L31
 546              	.L38:
 547              		.align	2
 548              	.L37:
 549 00b8 00080240 		.word	1073874944
 550 00bc 00000000 		.word	.LANCHOR2
 551 00c0 00000000 		.word	.LANCHOR3
 552 00c4 00000000 		.word	.LC2
 553 00c8 00000000 		.word	huart1
 554 00cc 00000000 		.word	.LANCHOR4
 555 00d0 0C000000 		.word	.LC3
 556 00d4 10000000 		.word	.LC4
 557 00d8 00000000 		.word	.LANCHOR5
 558              		.cfi_endproc
 559              	.LFE133:
 561              		.section	.rodata.MsgSend.str1.4,"aMS",%progbits,1
 562              		.align	2
 563              	.LC5:
 564 0000 0D0A2573 		.ascii	"\015\012%s\000"
 564      00
 565              		.section	.text.MsgSend,"ax",%progbits
 566              		.align	1
 567              		.global	MsgSend
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	MsgSend:
 573              	.LVL50:
 574              	.LFB136:
 132:Core/Src/shell.c **** 
 133:Core/Src/shell.c **** int MsgSend(char * msg)
 134:Core/Src/shell.c **** {
 575              		.loc 1 134 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 104
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 134 1 is_stmt 0 view .LVU140
 580 0000 00B5     		push	{lr}
 581              	.LCFI9:
 582              		.cfi_def_cfa_offset 4
 583              		.cfi_offset 14, -4
 584 0002 9BB0     		sub	sp, sp, #108
 585              	.LCFI10:
 586              		.cfi_def_cfa_offset 112
 587 0004 0246     		mov	r2, r0
 135:Core/Src/shell.c ****     HAL_StatusTypeDef ret;
 588              		.loc 1 135 5 is_stmt 1 view .LVU141
 136:Core/Src/shell.c ****     char msg2send[100];
 589              		.loc 1 136 5 view .LVU142
 137:Core/Src/shell.c ****     sprintf(msg2send, "\r\n%s",msg);
 590              		.loc 1 137 5 view .LVU143
 591 0006 0A49     		ldr	r1, .L43
 592 0008 01A8     		add	r0, sp, #4
ARM GAS  /tmp/cceByOc7.s 			page 16


 593              	.LVL51:
 594              		.loc 1 137 5 is_stmt 0 view .LVU144
 595 000a FFF7FEFF 		bl	sprintf
 596              	.LVL52:
 138:Core/Src/shell.c ****     ret = HAL_UART_Transmit(&UART, (uint8_t *)msg2send, strlen(msg2send), 0xff);
 597              		.loc 1 138 5 is_stmt 1 view .LVU145
 598              		.loc 1 138 57 is_stmt 0 view .LVU146
 599 000e 01A8     		add	r0, sp, #4
 600 0010 FFF7FEFF 		bl	strlen
 601              	.LVL53:
 602              		.loc 1 138 11 view .LVU147
 603 0014 FF23     		movs	r3, #255
 604 0016 82B2     		uxth	r2, r0
 605 0018 01A9     		add	r1, sp, #4
 606 001a 0648     		ldr	r0, .L43+4
 607 001c FFF7FEFF 		bl	HAL_UART_Transmit
 608              	.LVL54:
 139:Core/Src/shell.c ****     if(ret != HAL_OK)
 609              		.loc 1 139 5 is_stmt 1 view .LVU148
 610              		.loc 1 139 7 is_stmt 0 view .LVU149
 611 0020 18B1     		cbz	r0, .L41
 140:Core/Src/shell.c ****         return 0;
 612              		.loc 1 140 16 view .LVU150
 613 0022 0020     		movs	r0, #0
 614              	.LVL55:
 615              	.L39:
 141:Core/Src/shell.c ****     else 
 142:Core/Src/shell.c ****         return 1;
 143:Core/Src/shell.c **** }
 616              		.loc 1 143 1 view .LVU151
 617 0024 1BB0     		add	sp, sp, #108
 618              	.LCFI11:
 619              		.cfi_remember_state
 620              		.cfi_def_cfa_offset 4
 621              		@ sp needed
 622 0026 5DF804FB 		ldr	pc, [sp], #4
 623              	.LVL56:
 624              	.L41:
 625              	.LCFI12:
 626              		.cfi_restore_state
 142:Core/Src/shell.c **** }
 627              		.loc 1 142 16 view .LVU152
 628 002a 0120     		movs	r0, #1
 629              	.LVL57:
 142:Core/Src/shell.c **** }
 630              		.loc 1 142 16 view .LVU153
 631 002c FAE7     		b	.L39
 632              	.L44:
 633 002e 00BF     		.align	2
 634              	.L43:
 635 0030 00000000 		.word	.LC5
 636 0034 00000000 		.word	huart1
 637              		.cfi_endproc
 638              	.LFE136:
 640              		.global	CMDiter
 641              		.global	isEnable
 642              		.global	esc_flag
ARM GAS  /tmp/cceByOc7.s 			page 17


 643              		.global	g_nIndex
 644              		.global	charbuffer
 645              		.global	Chariter
 646              		.global	msgbuffer
 647              		.global	commandbuffer
 648              		.section	.bss.CMDiter,"aw",%nobits
 649              		.align	2
 650              		.set	.LANCHOR0,. + 0
 653              	CMDiter:
 654 0000 00000000 		.space	4
 655              		.section	.bss.Chariter,"aw",%nobits
 656              		.align	2
 657              		.set	.LANCHOR1,. + 0
 660              	Chariter:
 661 0000 00000000 		.space	4
 662              		.section	.bss.charbuffer,"aw",%nobits
 663              		.set	.LANCHOR2,. + 0
 666              	charbuffer:
 667 0000 00       		.space	1
 668              		.section	.bss.commandbuffer,"aw",%nobits
 669              		.align	2
 670              		.set	.LANCHOR4,. + 0
 673              	commandbuffer:
 674 0000 00000000 		.space	100
 674      00000000 
 674      00000000 
 674      00000000 
 674      00000000 
 675              		.section	.bss.esc_flag,"aw",%nobits
 676              		.align	2
 677              		.set	.LANCHOR5,. + 0
 680              	esc_flag:
 681 0000 00000000 		.space	4
 682              		.section	.bss.g_nIndex,"aw",%nobits
 683              		.align	2
 684              		.set	.LANCHOR3,. + 0
 687              	g_nIndex:
 688 0000 00000000 		.space	4
 689              		.section	.bss.isEnable,"aw",%nobits
 690              		.align	2
 693              	isEnable:
 694 0000 00000000 		.space	4
 695              		.section	.bss.msgbuffer,"aw",%nobits
 696              		.align	2
 699              	msgbuffer:
 700 0000 00000000 		.space	500
 700      00000000 
 700      00000000 
 700      00000000 
 700      00000000 
 701              		.text
 702              	.Letext0:
 703              		.file 2 "Core/Inc/shell.h"
 704              		.file 3 "/home/hyc/.gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 705              		.file 4 "/home/hyc/.gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 706              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 707              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/cceByOc7.s 			page 18


 708              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 709              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 710              		.file 9 "/home/hyc/.gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 711              		.file 10 "/home/hyc/.gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 712              		.file 11 "/home/hyc/.gcc-arm-none-eabi/arm-none-eabi/include/stdlib.h"
 713              		.file 12 "Core/Inc/main.h"
 714              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 715              		.file 14 "<built-in>"
ARM GAS  /tmp/cceByOc7.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 shell.c
     /tmp/cceByOc7.s:20     .text.DebugSend:0000000000000000 $t
     /tmp/cceByOc7.s:26     .text.DebugSend:0000000000000000 DebugSend
     /tmp/cceByOc7.s:78     .text.DebugSend:0000000000000028 $d
     /tmp/cceByOc7.s:83     .rodata.commandExe.str1.4:0000000000000000 $d
     /tmp/cceByOc7.s:90     .text.commandExe:0000000000000000 $t
     /tmp/cceByOc7.s:96     .text.commandExe:0000000000000000 commandExe
     /tmp/cceByOc7.s:368    .text.commandExe:0000000000000128 $d
     /tmp/cceByOc7.s:377    .rodata.shellexe.str1.4:0000000000000000 $d
     /tmp/cceByOc7.s:387    .text.shellexe:0000000000000000 $t
     /tmp/cceByOc7.s:393    .text.shellexe:0000000000000000 shellexe
     /tmp/cceByOc7.s:549    .text.shellexe:00000000000000b8 $d
     /tmp/cceByOc7.s:562    .rodata.MsgSend.str1.4:0000000000000000 $d
     /tmp/cceByOc7.s:566    .text.MsgSend:0000000000000000 $t
     /tmp/cceByOc7.s:572    .text.MsgSend:0000000000000000 MsgSend
     /tmp/cceByOc7.s:635    .text.MsgSend:0000000000000030 $d
     /tmp/cceByOc7.s:653    .bss.CMDiter:0000000000000000 CMDiter
     /tmp/cceByOc7.s:693    .bss.isEnable:0000000000000000 isEnable
     /tmp/cceByOc7.s:680    .bss.esc_flag:0000000000000000 esc_flag
     /tmp/cceByOc7.s:687    .bss.g_nIndex:0000000000000000 g_nIndex
     /tmp/cceByOc7.s:666    .bss.charbuffer:0000000000000000 charbuffer
     /tmp/cceByOc7.s:660    .bss.Chariter:0000000000000000 Chariter
     /tmp/cceByOc7.s:699    .bss.msgbuffer:0000000000000000 msgbuffer
     /tmp/cceByOc7.s:673    .bss.commandbuffer:0000000000000000 commandbuffer
     /tmp/cceByOc7.s:649    .bss.CMDiter:0000000000000000 $d
     /tmp/cceByOc7.s:656    .bss.Chariter:0000000000000000 $d
     /tmp/cceByOc7.s:667    .bss.charbuffer:0000000000000000 $d
     /tmp/cceByOc7.s:669    .bss.commandbuffer:0000000000000000 $d
     /tmp/cceByOc7.s:676    .bss.esc_flag:0000000000000000 $d
     /tmp/cceByOc7.s:683    .bss.g_nIndex:0000000000000000 $d
     /tmp/cceByOc7.s:690    .bss.isEnable:0000000000000000 $d
     /tmp/cceByOc7.s:696    .bss.msgbuffer:0000000000000000 $d

UNDEFINED SYMBOLS
strcpy
strlen
HAL_UART_Transmit
huart1
memcmp
Error_Handler
strstr
malloc
strncpy
CMDList
HAL_GPIO_TogglePin
HAL_UART_Receive_IT
memset
sprintf
